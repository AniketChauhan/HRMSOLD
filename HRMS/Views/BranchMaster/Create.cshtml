@model HRMS.Models.BranchMaster
@using HRMS.Models;

@{
    ViewBag.Title = "Create";
}
<head>
    <link href="~/StyleSheet/UnitStyleSheet.css" rel="stylesheet" />
</head>
<h2>Create</h2>


@using (Html.BeginForm("AddBank", "BranchMaster", FormMethod.Post))
{

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.BankMaster.BankName, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.BankMaster.BankName, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.Editor("BankName", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankMaster.BankName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Bank" class="btn btn-primary" />
            </div>
        </div>



        @if (ViewBag.success != null)
        {
            <script>alert("@ViewBag.success");</script>

        }
        @if (ViewBag.error != null)
        {
            <script>alert("@ViewBag.error");</script>

        }
    </div>

}
<hr />

@using (Html.BeginForm("Create", "BranchMaster", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BankCode, "Bank Name", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownList("BankCode", null, "--Select Bank--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BankCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MICR_Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MICR_Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MICR_Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IFSC_Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IFSC_Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IFSC_Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Country, null, "--Select Country--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.State, null, "--Select State--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.City, null, "--Select City--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PinCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PinCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Branch" class="btn btn-primary" />
            </div>
        </div>


        @if (ViewBag.success1 != null)
        {
            <script>alert("@ViewBag.success1");</script>

        }
        @if (ViewBag.error1 != null)
        {
            <script>alert("@ViewBag.error1");</script>

        }
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    $(document).ready(function () {
        $("#Country").change(function () {
            $.get("/BranchMaster/GetStateList", { CountryX: $("#Country").val() }, function (data) {

                $("#State").empty();

                $('#State').append($('<option>', {
                    value: '0',
                    text: '--Select State--',
                }, '</option>'));

                $("#City").empty();
                $('#City').append($('<option>', {
                    value: '0',
                    text: '--Select City--',
                }, '</option>'));

                $.each(data, function (index, row) {

                    $("#State").append("<option value='" + row.StateName + "'>" + row.StateName + "</option>")
                });

            });
        });
    });
</script>

<script>
    $(document).ready(function () {
        $("#State").change(function () {
            $.get("/BranchMaster/GetCityList", { StateX: $("#State").val() }, function (data) {

                $("#City").empty();

                $('#City').append($('<option>', {
                    value: '0',
                    text: '--Select City--',
                }, '</option>'));
                $.each(data, function (index, row) {

                    $("#City").append("<option value='" + row.CityName + "'>" + row.CityName + "</option>")
                });
            });
        });
    });
</script>
